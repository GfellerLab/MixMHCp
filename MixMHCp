#!/bin/bash

############
# Written by David Gfeller.
#
# For any question, please contact david.gfeller@unil.ch
#
# To cite MixMHCp2.1, please refer to:
# - Bassani-Sternberg M and Gfeller D, Unsupervised HLA Peptidome Deconvolution Improves Ligand Prediction Accuracy and Predicts Cooperative Effects in Peptide-HLA Interactions. J. Immunol. (2016)
# - Gfeller D et al. Peptide length distriution and multiple specificity in HLA-I ligands, bioRxiv (2018).
#
# MixMHCp can be used freely by academic groups for non-commercial purposes (see license).
# The product is provided free of charge, and, therefore, on an "as is"
# basis, without warranty of any kind.
#
# FOR-PROFIT USERS
# If you plan to use MixMHCp (version 2.1) in any for-profit
# application, you are required to obtain a separate license.
# To do so, please contact Nadette Bulgin (nbulgin@lcr.org) at the Ludwig Institute for  Cancer Research Ltd.
#
# Copyright (2018) David Gfeller
############


# Set the resource location. This has to be manually done on your machine
lib_path="YOUR PATH TO MixMHCp2.1/lib FOLDER"

usage="Usage: MixMHCp -i INPUT -o OUTPUT -m MAX_MOTIFS"

###
if [ -f "$lib_path"/run_MixMHCp.pl ]; then
	lib=$lib_path
else
	echo MixMHCp not found.
	exit 1;
fi


if [[ "$1" == "--help" || "$1" == "-h" ]]; then
cat <<END
$usage
Mandatory parameters:
  -i, --input             Absolute or relative path to the input file (fasta format or list of peptides)
  -o, --output            Specify a location for the output


Optional parameters:
  -m, --max-pwms          Maximum number of PWMs (default: 6, max: 50)
  -m_min, --min-pwms      Minimum number of PWMs (default: 1, max: 50)
  -b, --bias              Specify a residue bias file (default: uniprot based background frequencies, otherwise specifiy a file)
  -a, --alphabet          Specify your alphabet (default: ACDEFGHIKLMNPQRSTVWY, characters allowed: ACDEFGHIKLMNPQRSTVWYabcdefghijklmnopqrstuvwxyz)

Options:

  -k, --no-clean          Keep temporary files (default: 0)
  -l, --logo              Plot the logos (default: 1)
  -lt, --logo_type        Logo types (either ggseqlogo or Seq2Logo, default: ggseqlogo)
  -n, --name              Name of the output (only shown in the html file)
  -lc, --length_core      Length of the core (default: 9). Peptides should not be longer than 10+lc
  -tr, --trash            Use a trash cluster (default: 1)

END
	exit 0;
fi

# Defaults
output=./
maxpwms=6
minpwms=1
lcore=9
logo=1
trash=1

# Parse flags
while [ $# -gt 0 ]; do
	case $1 in
		-i | --input) input=$2; shift 2;;
		-o | --output) output=$2; shift 2;;
		-m_min | --min-pwms) minpwms=$2; shift 2;;
		-m | --max-pwms) maxpwms=$2; shift 2;;
		-k | --no-clean) noclean=-tm; shift 1;;
		-a | --alphabet) alphabet=$2; shift 2;;
		-b | --bias) bias=$2; shift 2;;
		-l | --logo) logo=$2; shift 2;;
		-lt | --logo_type) logo_type=$2; shift 2;;
		-n | --name) name=$2; shift 2;;
		-lc | --length_core) lcore=$2; shift 2;;
		-tr | --trash) trash=$2; shift 2;;
		*) shift 1;;
	esac
done

# Check for mandatory parameters
if	! [[ -n "$input" ]]; then 
	echo Try: "MixMHCp --help"
	echo $usage;
	exit 1;
fi

if [ -n "$bias" ]; then
	bias_file="-b $bias";
else
    bias_file="-b U";
fi

if [ -n "$alphabet" ]; then
    alphabet_command="-al $alphabet";
else
    alphabet_command="-al ACDEFGHIKLMNPQRSTVWY";
fi


if [ -n "$name" ]; then
    name_file="-n $name";
else
    name_file="-n Peptides";
fi

if [ -n "$logo_type" ]; then
    #if [ $logo_type = "LoLa" ] || [ $logo_type = "Seq2Logo" ] || [ $logo_type = "ggseqlogo" ]; then
    if [ $logo_type = "Seq2Logo" ] || [ $logo_type = "ggseqlogo" ]; then
	logo_type_command="-lt $logo_type";
    else
	#echo "Invalid type of logos (should be either ggseqlogo, LoLa or Seq2Logo)"
	echo "Invalid type of logos (should be either ggseqlogo or Seq2Logo)"

    fi
else
    logo_type_command="-lt ggseqlogo";
fi


input=`perl -e 'use Cwd "abs_path";print abs_path(shift)' $input`;

if [ -f "$input" ]; then
	input="-i $input";
else
	echo Input file does not appear to exist.
	exit 1;
fi


mkdir -p $output
output=`perl -e 'use Cwd "abs_path";print abs_path(shift)' $output`;
output=$output/

lib_dir=`perl -e 'use Cwd "abs_path";print abs_path(shift)' $lib`/


perl $lib_dir/run_MixMHCp.pl $lib_dir $noclean -m_min $minpwms -m $maxpwms $bias_file $input -o $output -l $logo $name_file $logo_type_command -lc $lcore -tr $trash $alphabet_command

